// Code generated by protoc-gen-go.
// source: src/zdxsv/pkg/proto/zdxsv.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	src/zdxsv/pkg/proto/zdxsv.proto

It has these top-level messages:
	BattleMessage
	PingMessage
	PongMessage
	HelloServerMessage
	Packet
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_HelloServer MessageType = 1
	MessageType_Ping        MessageType = 2
	MessageType_Pong        MessageType = 3
	MessageType_Battle      MessageType = 4
)

var MessageType_name = map[int32]string{
	1: "HelloServer",
	2: "Ping",
	3: "Pong",
	4: "Battle",
}
var MessageType_value = map[string]int32{
	"HelloServer": 1,
	"Ping":        2,
	"Pong":        3,
	"Battle":      4,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto1.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type BattleMessage struct {
	UserId           *string `protobuf:"bytes,1,req,name=user_id,json=userId" json:"user_id,omitempty"`
	Seq              *uint32 `protobuf:"varint,2,req,name=seq" json:"seq,omitempty"`
	Body             []byte  `protobuf:"bytes,3,req,name=body" json:"body,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BattleMessage) Reset()                    { *m = BattleMessage{} }
func (m *BattleMessage) String() string            { return proto1.CompactTextString(m) }
func (*BattleMessage) ProtoMessage()               {}
func (*BattleMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BattleMessage) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *BattleMessage) GetSeq() uint32 {
	if m != nil && m.Seq != nil {
		return *m.Seq
	}
	return 0
}

func (m *BattleMessage) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type PingMessage struct {
	Timestamp        *int64  `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	UserId           *string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PingMessage) Reset()                    { *m = PingMessage{} }
func (m *PingMessage) String() string            { return proto1.CompactTextString(m) }
func (*PingMessage) ProtoMessage()               {}
func (*PingMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PingMessage) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *PingMessage) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

type PongMessage struct {
	Timestamp        *int64  `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	UserId           *string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	PublicAddr       *string `protobuf:"bytes,3,opt,name=public_addr,json=publicAddr" json:"public_addr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PongMessage) Reset()                    { *m = PongMessage{} }
func (m *PongMessage) String() string            { return proto1.CompactTextString(m) }
func (*PongMessage) ProtoMessage()               {}
func (*PongMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PongMessage) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *PongMessage) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *PongMessage) GetPublicAddr() string {
	if m != nil && m.PublicAddr != nil {
		return *m.PublicAddr
	}
	return ""
}

type HelloServerMessage struct {
	SessionId        *string `protobuf:"bytes,1,req,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Ok               *bool   `protobuf:"varint,2,opt,name=ok" json:"ok,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HelloServerMessage) Reset()                    { *m = HelloServerMessage{} }
func (m *HelloServerMessage) String() string            { return proto1.CompactTextString(m) }
func (*HelloServerMessage) ProtoMessage()               {}
func (*HelloServerMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *HelloServerMessage) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func (m *HelloServerMessage) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

type Packet struct {
	Type             *MessageType        `protobuf:"varint,1,req,name=type,enum=proto.MessageType" json:"type,omitempty"`
	Seq              *uint32             `protobuf:"varint,2,opt,name=seq" json:"seq,omitempty"`
	Ack              *uint32             `protobuf:"varint,3,opt,name=ack" json:"ack,omitempty"`
	HelloServerData  *HelloServerMessage `protobuf:"bytes,10,opt,name=hello_server_data,json=helloServerData" json:"hello_server_data,omitempty"`
	PingData         *PingMessage        `protobuf:"bytes,11,opt,name=ping_data,json=pingData" json:"ping_data,omitempty"`
	PongData         *PongMessage        `protobuf:"bytes,12,opt,name=pong_data,json=pongData" json:"pong_data,omitempty"`
	BattleData       []*BattleMessage    `protobuf:"bytes,13,rep,name=battle_data,json=battleData" json:"battle_data,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Packet) Reset()                    { *m = Packet{} }
func (m *Packet) String() string            { return proto1.CompactTextString(m) }
func (*Packet) ProtoMessage()               {}
func (*Packet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Packet) GetType() MessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MessageType_HelloServer
}

func (m *Packet) GetSeq() uint32 {
	if m != nil && m.Seq != nil {
		return *m.Seq
	}
	return 0
}

func (m *Packet) GetAck() uint32 {
	if m != nil && m.Ack != nil {
		return *m.Ack
	}
	return 0
}

func (m *Packet) GetHelloServerData() *HelloServerMessage {
	if m != nil {
		return m.HelloServerData
	}
	return nil
}

func (m *Packet) GetPingData() *PingMessage {
	if m != nil {
		return m.PingData
	}
	return nil
}

func (m *Packet) GetPongData() *PongMessage {
	if m != nil {
		return m.PongData
	}
	return nil
}

func (m *Packet) GetBattleData() []*BattleMessage {
	if m != nil {
		return m.BattleData
	}
	return nil
}

func init() {
	proto1.RegisterType((*BattleMessage)(nil), "proto.BattleMessage")
	proto1.RegisterType((*PingMessage)(nil), "proto.PingMessage")
	proto1.RegisterType((*PongMessage)(nil), "proto.PongMessage")
	proto1.RegisterType((*HelloServerMessage)(nil), "proto.HelloServerMessage")
	proto1.RegisterType((*Packet)(nil), "proto.Packet")
	proto1.RegisterEnum("proto.MessageType", MessageType_name, MessageType_value)
}

func init() { proto1.RegisterFile("src/zdxsv/pkg/proto/zdxsv.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x92, 0x51, 0xef, 0x93, 0x30,
	0x14, 0xc5, 0x43, 0xc1, 0x39, 0x6e, 0xc7, 0x86, 0x8d, 0x89, 0x18, 0x35, 0x12, 0x1e, 0x0c, 0xf1,
	0x61, 0x4b, 0x96, 0xf8, 0x6a, 0xa2, 0xce, 0xc4, 0x3d, 0x68, 0x96, 0xea, 0x3b, 0xe9, 0x68, 0xc3,
	0x08, 0x8c, 0x22, 0xed, 0x16, 0xe7, 0xe7, 0xf2, 0x03, 0x1a, 0x0a, 0x08, 0x8b, 0x8f, 0xff, 0x27,
	0x0e, 0xb7, 0xfd, 0x9d, 0x7b, 0xb8, 0x5c, 0x78, 0xa1, 0x9a, 0x74, 0xf3, 0x9b, 0xff, 0x52, 0xd7,
	0x4d, 0xdd, 0x48, 0x2d, 0x3b, 0xbd, 0x36, 0x9a, 0x3c, 0x32, 0x8f, 0xe8, 0x1b, 0x78, 0x1f, 0x99,
	0xd6, 0xa5, 0xf8, 0x2a, 0x94, 0x62, 0x99, 0x20, 0xcf, 0xe0, 0xf1, 0x45, 0x89, 0x26, 0xc9, 0x79,
	0x60, 0x85, 0x28, 0x76, 0xe9, 0xac, 0x7d, 0xdd, 0x73, 0xe2, 0x83, 0xad, 0xc4, 0xcf, 0x00, 0x85,
	0x28, 0xf6, 0x68, 0x2b, 0x09, 0x01, 0xe7, 0x28, 0xf9, 0x2d, 0xb0, 0x43, 0x14, 0x2f, 0xa8, 0xd1,
	0xd1, 0x0e, 0xf0, 0x21, 0xaf, 0xb2, 0xc1, 0xed, 0x25, 0xb8, 0x3a, 0x3f, 0x0b, 0xa5, 0xd9, 0xb9,
	0x36, 0x7e, 0x36, 0x1d, 0x0b, 0xd3, 0x5e, 0x28, 0xb4, 0xc6, 0x5e, 0x91, 0x00, 0x7c, 0x90, 0x0f,
	0x75, 0x21, 0xaf, 0x01, 0xd7, 0x97, 0x63, 0x99, 0xa7, 0x09, 0xe3, 0xbc, 0x09, 0x6c, 0x73, 0x08,
	0x5d, 0xe9, 0x03, 0xe7, 0x4d, 0xf4, 0x09, 0xc8, 0x17, 0x51, 0x96, 0xf2, 0xbb, 0x68, 0xae, 0xa2,
	0x19, 0xba, 0xbd, 0x02, 0x50, 0x42, 0xa9, 0x5c, 0x56, 0xe3, 0x10, 0xdc, 0xbe, 0xb2, 0xe7, 0x64,
	0x09, 0x48, 0x16, 0xa6, 0xd3, 0x9c, 0x22, 0x59, 0x44, 0x7f, 0x10, 0xcc, 0x0e, 0x2c, 0x2d, 0x84,
	0x26, 0x6f, 0xc0, 0xd1, 0xb7, 0x5a, 0x18, 0x66, 0xb9, 0x25, 0xdd, 0xa4, 0xd7, 0xbd, 0xef, 0x8f,
	0x5b, 0x2d, 0xa8, 0x39, 0x1f, 0x47, 0x69, 0x0d, 0xa3, 0xf4, 0xc1, 0x66, 0x69, 0x61, 0x22, 0x7a,
	0xb4, 0x95, 0xe4, 0x33, 0x3c, 0x39, 0xb5, 0xd9, 0x12, 0x65, 0xc2, 0x25, 0x9c, 0x69, 0x16, 0x40,
	0x68, 0xc5, 0x78, 0xfb, 0xbc, 0x37, 0xfe, 0x3f, 0x3b, 0x5d, 0x9d, 0xc6, 0xda, 0x8e, 0x69, 0x46,
	0x36, 0xe0, 0xd6, 0x79, 0x95, 0x75, 0x38, 0x36, 0xf8, 0x90, 0x6b, 0xf2, 0x9f, 0xe8, 0xbc, 0xbd,
	0xf4, 0x0f, 0x90, 0x03, 0xb0, 0xb8, 0x07, 0xe4, 0x14, 0x90, 0x3d, 0xf0, 0x0e, 0xf0, 0xd1, 0x6c,
	0x50, 0x87, 0x78, 0xa1, 0x1d, 0xe3, 0xed, 0xd3, 0x1e, 0xb9, 0xdb, 0x2d, 0x0a, 0xdd, 0xc5, 0x16,
	0x7b, 0xfb, 0x1e, 0xf0, 0x64, 0x30, 0x64, 0x05, 0x78, 0xf2, 0x39, 0xbe, 0x45, 0xe6, 0xe0, 0xb4,
	0x01, 0x7d, 0x64, 0x94, 0xac, 0x32, 0xdf, 0x26, 0x00, 0xb3, 0xce, 0xd0, 0x77, 0xfe, 0x06, 0x00,
	0x00, 0xff, 0xff, 0xe2, 0x0e, 0x3b, 0x8c, 0xdd, 0x02, 0x00, 0x00,
}
